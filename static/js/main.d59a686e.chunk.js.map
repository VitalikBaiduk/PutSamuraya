{"version":3,"sources":["components/Profile/DescriptionProfile.module.css","components/Profile/Profile.module.css","components/Header/Header.module.css","components/Profile/Post/Post.module.css","components/Login/Login.module.css","components/Nav/Nav.module.css","components/Profile/EditableSpan/EditableSpan.module.css","components/Dialogs/Dialogs.module.css","components/Friends/Friends.module.css","reportWebVitals.ts","components/Nav/Nav.tsx","components/News/News.tsx","components/Community/Community.tsx","components/Photo/Photo.tsx","components/Music/Music.tsx","components/Games/Games.tsx","components/Settings/Settings.tsx","img/img1.png","img/img2.png","img/img3.png","img/img4.png","img/img5.png","img/img6.png","redux/dialogsReducer.tsx","components/Dialogs/DialogsItem/DialogsItem.tsx","components/Dialogs/MessangeOfDialogs/MessageOfDialog.tsx","components/Dialogs/DialogsContainer.tsx","components/Dialogs/Dialogs.tsx","api/api.ts","redux/friendsReducer.tsx","img/user (1).png","components/Friends/Friends.tsx","img/Double Ring-1s-200px.svg","components/Preloader/Preloader.tsx","redux/users-selectors.ts","components/Friends/FriendsContainer.tsx","img/photoFromProfile.jpg","components/Profile/PhotoAndInfo.tsx","components/Profile/EditableSpan/EditableSpan.tsx","components/Profile/DescriptionProfile.tsx","redux/profileReducer.tsx","redux/authReducer.tsx","redux/appReducer.tsx","redux/redux-store.tsx","redux/formReducer.tsx","components/Profile/Post/PostContainer.tsx","components/Profile/Post/Posts.tsx","components/Profile/Profile.tsx","hoc/withAuthRedirect.tsx","components/Profile/ProfileContainerComponent.tsx","img/logoVk.png","components/Header/Header.tsx","components/Header/HeaderContainer.tsx","components/Login/Login.tsx","App.tsx","index.tsx"],"names":["module","exports","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Nav","className","classes","nav","elemNav","logo","src","activeClassName","activeLink","to","News","Community","Photo","Music","Games","Settings","updateNewMessageBody","sendMessage","initialState","arrOfPeople","id","name","img","img1","img2","img3","img4","img5","img6","arrMessage","message","newMessageDialogs","sendMessageActionCreator","type","DialogsItem","props","dialogsHuman","imgDialogsHuman","alt","path","dialogsHumanText","active","MessageOfDialog","textMessage","DialogsContainer","connect","state","dialogsReducer","dispatch","addNewMessage","text","pressEnter","e","key","dialogsPeople","map","elem","dialogsMessage","dialogs","dialogsPeoples","messagePeople","inputAndButtonDialogs","onKeyPress","placeholder","onChange","currentTarget","value","inputDialogs","onClick","buttonDialogs","instance","axios","create","withCredentials","baseURL","headers","usersApi","currentPage","pageSize","get","response","data","res","totalCount","post","delete","userId","profileApi","getUser","getStatus","updateStatus","status","put","authApi","friends","totalUsersCount","isFetching","followingInProgress","unFollow","humanId","setUsers","users","setCurrentPage","setTotalUsersCount","usersCount","toggleIsFetching","followingInProgressAC","following","Friends","pageCount","Math","ceil","useState","portionNumber","setPortionNumber","portionCount","leftBorder","rightBorder","mainDiv","getUsers","pages","filter","el","setPage","currentEl","mainFriendsDiv","divFriends","photoAndName","imgFriends","photos","small","user","nameOfPeoples","addressInfo","country","city","followed","disabled","some","unfollowThunk","unFollowStyle","followThunk","followStyle","Preloader","loader","preloader","getRequestUsers","friendsReducer","getPageSize","getTotalUsersCount","get–°urrentPage","FriendsContainer","items","setPageThunkCreator","resultCode","useDispatch","useEffect","i","push","ProtoAndInfo","Object","keys","profile","length","photoAndInfo","params","photo","large","photoFromProfile","statistics","EditableSpan","setState","setValue","onDoubleClick","autoFocus","onBlur","inputOnProfile","DescriptionProfile","content","nameAndActive","fullName","descrOfHuman","elemDescrOfHuman","textDescr","elemDescf","posts","newInputValue","setUsersProfile","setStatus","email","login","isAuth","setUserData","initialized","rootReducer","combineReducers","profileReducer","action","newPost","likeCount","newValue","human","console","log","authReducer","form","appReducer","store","createStore","applyMiddleware","thunkMiddleware","window","PostContainer","addPosts","getState","mainInput","inputProfile","buttonProfile","p","textPost","Profile","mainContent","mapStateToProps","ProfileContainerComponent","this","match","setUserThunkCreator","React","Component","ProfileContainer","compose","withRouter","Header","mainHeader","loginBlock","loginName","activeLogin","loginButton","HeaderContainerComponent","HeaderContainer","LoginComponent","formInner","input","send","Login","App","initialize","render","component","a","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d59a686e.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"DescriptionProfile_content__2UCOR\",\"nameAndActive\":\"DescriptionProfile_nameAndActive__2A2MV\",\"name\":\"DescriptionProfile_name__2_LhC\",\"active\":\"DescriptionProfile_active__1av3B\",\"descrOfHuman\":\"DescriptionProfile_descrOfHuman__sCQaD\",\"elemDescrOfHuman\":\"DescriptionProfile_elemDescrOfHuman__1bYuJ\",\"textDescr\":\"DescriptionProfile_textDescr__1vOk8\",\"elemDescf\":\"DescriptionProfile_elemDescf__16LHX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"Profile_content__2wLDD\",\"photoAndInfo\":\"Profile_photoAndInfo__1ZR2K\",\"photo\":\"Profile_photo__21Q2U\",\"statistics\":\"Profile_statistics__3Ulv_\",\"logo\":\"Profile_logo__1_PkJ\",\"text\":\"Profile_text__3RWJW\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainHeader\":\"Header_mainHeader__e--XO\",\"logo\":\"Header_logo__3_SJs\",\"loginBlock\":\"Header_loginBlock__6mma5\",\"loginButton\":\"Header_loginButton__3LgSO\",\"loginName\":\"Header_loginName__2Y42i\",\"activeLogin\":\"Header_activeLogin__M7W10\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"post\":\"Post_post__3B5ZJ\",\"postImg\":\"Post_postImg__237II\",\"textPost\":\"Post_textPost__1PdKq\",\"inputProfile\":\"Post_inputProfile__3kqE7\",\"buttonProfile\":\"Post_buttonProfile__zujP2\",\"mainInput\":\"Post_mainInput__PK3N5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"Login_form__2mvFD\",\"formInner\":\"Login_formInner__N4uPu\",\"input\":\"Login_input__1zhXD\",\"send\":\"Login_send__RinQg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Nav_nav__3gICw\",\"elemNav\":\"Nav_elemNav__3dZP1\",\"logo\":\"Nav_logo__348g8\",\"activeLink\":\"Nav_activeLink__GsTVR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"inputOnProfile\":\"EditableSpan_inputOnProfile__1vM4d\",\"status\":\"EditableSpan_status__2mKR6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__2xRSA\",\"dialogsPeoples\":\"Dialogs_dialogsPeoples__4AaCd\",\"dialogsHuman\":\"Dialogs_dialogsHuman__3oqEt\",\"active\":\"Dialogs_active__2sQhs\",\"imgDialogsHuman\":\"Dialogs_imgDialogsHuman__UyC5B\",\"dialogsHumanText\":\"Dialogs_dialogsHumanText__1Ewho\",\"messagePeople\":\"Dialogs_messagePeople__1X3jp\",\"message\":\"Dialogs_message__1xIDh\",\"inputAndButtonDialogs\":\"Dialogs_inputAndButtonDialogs__3K_H5\",\"inputDialogs\":\"Dialogs_inputDialogs__1UY4Y\",\"buttonDialogs\":\"Dialogs_buttonDialogs__1eQMB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainDiv\":\"Friends_mainDiv__3-GhC\",\"divFriends\":\"Friends_divFriends__7fNoB\",\"photoAndName\":\"Friends_photoAndName__28bHw\",\"mainFriendsDiv\":\"Friends_mainFriendsDiv__32_-2\",\"imgFriends\":\"Friends_imgFriends__-xQt1\",\"nameOfPeoples\":\"Friends_nameOfPeoples__1EsPE\",\"followStyle\":\"Friends_followStyle__1MKfi\",\"unFollowStyle\":\"Friends_unFollowStyle__3Fl1n\",\"country\":\"Friends_country__16iky\",\"city\":\"Friends_city__3l7UM\",\"currentEl\":\"Friends_currentEl__1eQCc\",\"loader\":\"Friends_loader__2EgrS\"};","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport classes from \"./Nav.module.css\";\nimport {NavLink} from \"react-router-dom\";\n\nexport const Nav = () => {\n    return (\n        <nav className={classes.nav}>\n            <div className={classes.elemNav}>\n                <img className={classes.logo} src=\"https://img.icons8.com/wired/64/000000/human-head.png\"/>\n                <NavLink activeClassName={classes.activeLink} to=\"/profile\">My profile</NavLink>\n            </div>\n            <div className={classes.elemNav}>\n                <img className={classes.logo} src=\"https://img.icons8.com/dotty/80/000000/news.png\"/>\n                <NavLink activeClassName={classes.activeLink} to=\"/news\">News</NavLink>\n            </div>\n            <div className={classes.elemNav}>\n                <img className={classes.logo} src=\"https://img.icons8.com/ios/50/000000/imessage.png\"/>\n                <NavLink activeClassName={classes.activeLink} to=\"/dialogs\">Messages</NavLink>\n            </div>\n            <div className={classes.elemNav}>\n                <img className={classes.logo} src=\"https://img.icons8.com/ios/50/000000/friends.png\"/>\n                <NavLink activeClassName={classes.activeLink} to=\"/friends\">Friends</NavLink>\n            </div>\n            <div className={classes.elemNav}>\n                <img className={classes.logo}\n                     src=\"https://img.icons8.com/wired/64/000000/community-grants.png\"/>\n                <NavLink activeClassName={classes.activeLink} to=\"/community\">–°ommunity</NavLink>\n            </div>\n            <div className={classes.elemNav}>\n                <img className={classes.logo}\n                     src=\"https://img.icons8.com/ios/50/000000/photo-editor.png\"/>\n                <NavLink activeClassName={classes.activeLink} to=\"/photo\">Photo</NavLink>\n            </div>\n            <div className={classes.elemNav}>\n                <img className={classes.logo}\n                     src=\"https://img.icons8.com/ios/50/000000/apple-music.png\"/>\n                <NavLink activeClassName={classes.activeLink} to=\"/music\">Music</NavLink>\n            </div>\n            <div className={classes.elemNav}>\n                <img className={classes.logo}\n                     src=\"https://img.icons8.com/ios/50/000000/epic-games.png\"/>\n                <NavLink activeClassName={classes.activeLink} to=\"/games\">Games</NavLink>\n            </div>\n            <div className={classes.elemNav}>\n                <img className={classes.logo} src=\"https://img.icons8.com/ios/50/000000/settings--v1.png\"/>\n                <NavLink activeClassName={classes.activeLink} to=\"/settings\">Settings</NavLink>\n            </div>\n        </nav>\n    )\n}","import React from 'react';\nimport \"./News.module.css\"\n\nexport const News = () => {\n    return (\n        <div>\n\n        </div>\n    )\n}","import React from 'react';\nimport \"./Community.module.css\"\n\nexport const Community = () => {\n    return (\n        <div>\n\n        </div>\n    )\n}\n","import React from 'react';\nimport \"./Photo.module.css\"\n\nexport const Photo = () => {\n    return (\n        <div>\n\n        </div>\n    )\n}","import React from 'react';\nimport \"./Music.module.css\"\n\nexport const Music = () => {\n    return (\n        <div>\n\n        </div>\n    )\n}","import React from 'react';\nimport \"./Games.module.css\"\n\nexport const Games = () => {\n    return (\n        <div>\n\n        </div>\n    )\n}","import React from 'react';\nimport \"./Settings.module.css\"\n\nexport const Settings = () => {\n    return (\n        <div>\n\n        </div>\n    )\n}","export default __webpack_public_path__ + \"static/media/img1.8733ce12.png\";","export default __webpack_public_path__ + \"static/media/img2.8e433e63.png\";","export default __webpack_public_path__ + \"static/media/img3.60fb1685.png\";","export default __webpack_public_path__ + \"static/media/img4.9c90ba62.png\";","export default __webpack_public_path__ + \"static/media/img5.f9aee883.png\";","export default __webpack_public_path__ + \"static/media/img6.dea74193.png\";","import img1 from \"../img/img1.png\";\nimport img2 from \"../img/img2.png\";\nimport img3 from \"../img/img3.png\";\nimport img4 from \"../img/img4.png\";\nimport img5 from \"../img/img5.png\";\nimport img6 from \"../img/img6.png\";\nimport {friendsReducerActionCreatorType} from \"./friendsReducer\";\nimport {addPostActionCreatorType, changeInputValueActionCreatorType} from \"./profileReducer\";\n\nexport type ActionType = addPostActionCreatorType\n    | changeInputValueActionCreatorType\n    | updateNewMessageBodyActionCreatorType\n    | sendMessageActionCreatorType\n    | friendsReducerActionCreatorType\n\nexport type ArrOfPeopleType = {\n    id: number\n    name: string\n    img: string\n}\nexport type ArrMessageType = {\n    id: number\n    message: string\n}\n\nconst updateNewMessageBody = \"UPDATE-NEW-MESSAGE-BODY\";\nconst sendMessage = \"SEND-MESSAGE\";\n\nexport type DialogsInitialStateType = {\n    arrOfPeople: Array<ArrOfPeopleType>\n    arrMessage: Array<ArrMessageType>\n    newMessageDialogs: string\n}\n\nlet initialState: DialogsInitialStateType = {\n    arrOfPeople: [\n        {id: 1, name: \"Andrew\", img: img1},\n        {id: 2, name: \"Robin\", img: img2},\n        {id: 3, name: \"Kate\", img: img3},\n        {id: 4, name: \"Elise\", img: img4},\n        {id: 5, name: \"Marta\", img: img5},\n        {id: 6, name: \"Ksusha\", img: img6}\n    ],\n    arrMessage: [\n        {id: 1, message: \"–ø—Ä–∏–≤–µ—Ç\"},\n        {id: 2, message: \"–∫–∞–∫ –¥–µ–ª–∞?\"},\n        {id: 3, message: \"–∫–∞–∫ —É—á–µ–±–∞?\"},\n        {id: 4, message: \"–ø–æ–≥–Ω–∞–ª–∏ –≥—É–ª—è—Ç—å\"},\n        {id: 5, message: \"–∫–µ–±–∞–±?\"},\n        {id: 6, message: \"–º–æ–∂–µ—Ç –±—ã—Ç—å\"},\n    ],\n    newMessageDialogs: \"\",\n}\n\nexport const dialogsReducer = (state: DialogsInitialStateType = initialState, action: ActionType): DialogsInitialStateType => {\n    switch (action.type) {\n        case updateNewMessageBody :\n            return {\n                ...state,\n                newMessageDialogs: action.message\n            }\n        case sendMessage :\n            return {\n                ...state,\n                arrMessage: [...state.arrMessage, {id: 6, message: state.newMessageDialogs}],\n                newMessageDialogs: ''\n            }\n        default : {\n            return state\n        }\n    }\n}\nexport type updateNewMessageBodyActionCreatorType = ReturnType<typeof updateNewMessageBodyActionCreator>\nexport const updateNewMessageBodyActionCreator = (message: string) => {\n    return {\n        type: updateNewMessageBody,\n        message: message\n    } as const\n}\n\nexport type sendMessageActionCreatorType = ReturnType<typeof sendMessageActionCreator>\nexport const sendMessageActionCreator = () => {\n    return {\n        type: sendMessage,\n    } as const\n}","import React from 'react';\nimport classes from \"../Dialogs.module.css\";\nimport {NavLink} from \"react-router-dom\";\n\nexport type DialogsItemType = {\n    name: string\n    path: string\n    img: string\n}\n\nexport const DialogsItem = (props: DialogsItemType) => {\n    return (\n        <div>\n            <div className={classes.dialogsHuman}>\n                <img className={classes.imgDialogsHuman} src={props.img} alt=\"img\"/>\n                <NavLink to={props.path}\n                         className={classes.dialogsHumanText + ' ' + classes.active}>{props.name}</NavLink>\n            </div>\n        </div>\n    )\n}\n","import classes from \"../Dialogs.module.css\";\nimport React from \"react\";\n\nexport type MessageType = {\n    message: string\n}\n\nexport const MessageOfDialog = (props: MessageType) => {\n    return (\n        <div className={classes.message}>\n            <p className={classes.textMessage}>{props.message}</p>\n        </div>\n    )\n}","import React, {ChangeEvent, KeyboardEvent} from \"react\";\nimport {\n    ArrMessageType,\n    ArrOfPeopleType,\n    sendMessageActionCreator,\n    updateNewMessageBodyActionCreator\n} from \"../../redux/dialogsReducer\";\nimport {Dispatch} from \"redux\";\nimport {Dialogs} from \"./Dialogs\";\nimport {connect} from \"react-redux\";\nimport {AppStateType} from \"../../redux/redux-store\";\n\ntype mapStateToPropsType = {\n    arrOfPeople: Array<ArrOfPeopleType>\n    arrMessage: Array<ArrMessageType>\n    newMessageDialogs: string\n}\ntype mapDispatchToPropsType = {\n    addNewMessage: (text: string) => void\n    sendMessage: () => void\n    pressEnter: (e: KeyboardEvent<HTMLInputElement>) => void\n}\n\nexport type DialogsPropsType = mapStateToPropsType & mapDispatchToPropsType\n\nlet mapStateToProps = (state: AppStateType): mapStateToPropsType => {\n    return {\n        arrOfPeople: state.dialogsReducer.arrOfPeople,\n        arrMessage: state.dialogsReducer.arrMessage,\n        newMessageDialogs: state.dialogsReducer.newMessageDialogs\n    }\n}\n\nlet mapDispatchToProps = (dispatch: Dispatch): mapDispatchToPropsType => {\n    return {\n        addNewMessage: (text: string) => {\n            dispatch(updateNewMessageBodyActionCreator(text))\n        },\n        sendMessage: () => {\n            dispatch(sendMessageActionCreator())\n        },\n        pressEnter: (e: KeyboardEvent<HTMLInputElement>) => {\n            if (e.key === \"Enter\") {\n                dispatch(sendMessageActionCreator())\n            }\n        }\n    }\n}\nexport const DialogsContainer = connect(mapStateToProps, mapDispatchToProps)(Dialogs)","import React, {ChangeEvent, KeyboardEvent} from 'react';\nimport classes from \"./Dialogs.module.css\"\nimport {DialogsItem} from './DialogsItem/DialogsItem';\nimport {MessageOfDialog} from \"./MessangeOfDialogs/MessageOfDialog\";\nimport {DialogsPropsType} from \"./DialogsContainer\";\n\n\nexport const Dialogs = (props: DialogsPropsType) => {\n\n    let dialogsPeople = props.arrOfPeople.map((elem) => {\n        let path = \"/dialogs/\" + elem.id\n        return (\n            <DialogsItem key={elem.id} path={path} name={elem.name} img={elem.img}/>\n        )\n    })\n\n    let dialogsMessage = props.arrMessage.map((elem) => {\n        return (\n            <MessageOfDialog message={elem.message}/>\n        )\n    })\n\n    const addNewMessage = (e: ChangeEvent<HTMLInputElement>) => {\n        props.addNewMessage(e.currentTarget.value)\n    }\n    const sendMessage = () => {\n        props.sendMessage()\n    }\n\n    const pressEnter = (e: KeyboardEvent<HTMLInputElement>) => {\n        if (e.key === \"Enter\") {\n            props.pressEnter(e)\n        }\n    }\n\n    return (\n        <div className={classes.dialogs}>\n            <div className={classes.dialogsPeoples}>\n                {dialogsPeople}\n            </div>\n            <div className={classes.messagePeople}>\n                {dialogsMessage}\n                <div className={classes.inputAndButtonDialogs}>\n                    <input onKeyPress={pressEnter} placeholder=\"Enter your message\"\n                           onChange={addNewMessage}\n                           value={props.newMessageDialogs}\n                           className={classes.inputDialogs}/>\n                    <button onClick={sendMessage} className={classes.buttonDialogs}>Send</button>\n                </div>\n            </div>\n        </div>\n    )\n}","import axios from \"axios\";\n\n\nconst instance = axios.create({\n    withCredentials: true,\n    baseURL: \"https://social-network.samuraijs.com/api/1.0/\",\n    headers: {\n        \"API-KEY\": \"cb4e4b82-6baf-407e-8a88-0e6356d76e2c\"\n    }\n})\n\nexport const usersApi = {\n    getUsers(currentPage: number, pageSize: number) {\n        return instance.get(`users?page=${currentPage}&count=${pageSize}`)\n            .then(response => response.data)\n    },\n    getUserTotalCount() {\n        return instance.get(\"users\")\n            .then((res) => {\n                return res.data.totalCount\n            })\n    },\n    followUser(id: number) {\n        return instance.post(`follow/${id}`,)\n            .then((response) => {\n                return response.data\n            })\n    },\n    unfollowUser(id: number) {\n        return instance.delete(`follow/${id}`, {},)\n            .then((response) => {\n                return response.data\n            })\n    },\n    setUser(userId: any) {\n        return profileApi.getUser(userId)\n    }\n}\n//{status: 123}\nexport let profileApi = {\n    getUser(userId: any) {\n        return instance.get(`profile/` + userId)\n            .then((response) => {\n                return response\n            })\n    },\n    getStatus(userId: any) {\n        return instance.get(\"profile/status/\" + userId)\n            .then(response => {\n                return response\n            })\n    },\n    updateStatus(status: string) {\n        return instance.put('profile/status',)\n    }\n}\n\nexport const authApi = {\n    me() {\n        return instance.get(\"auth/me\")\n            .then((response) => {\n                return response\n            })\n    }\n}","import {addPostActionCreatorType, changeInputValueActionCreatorType} from \"./profileReducer\";\nimport {sendMessageActionCreatorType, updateNewMessageBodyActionCreatorType} from \"./dialogsReducer\";\nimport {Dispatch} from \"redux\";\nimport {usersApi} from \"../api/api\";\n\nexport type ActionType = addPostActionCreatorType\n    | changeInputValueActionCreatorType\n    | updateNewMessageBodyActionCreatorType\n    | sendMessageActionCreatorType\n    | friendsReducerActionCreatorType\n    | followACType\n    | unFollowACType\n    | setUsersACType\n    | setCurrentPageType\n    | setTotalUsersCountType\n    | toggleIsFetchingType\n    | followingInProgressACType\n\nexport type PeopleType = {\n    id: number\n    followed: boolean\n    name: string\n    img: string\n    address: {\n        country: string\n        city: string\n    }\n}\nexport type friendsReducerStateType = {\n    friends: Array<PeopleType>\n    pageSize: number\n    totalUsersCount: number\n    currentPage: number\n    isFetching: boolean\n    followingInProgress: Array<number>\n}\n\nlet initialState: friendsReducerStateType = {\n    friends: [],\n    pageSize: 4,\n    totalUsersCount: 150,\n    currentPage: 1,\n    isFetching: false,\n    followingInProgress: [],\n}\n\nexport const friendsReducer = (state: friendsReducerStateType = initialState, action: ActionType): friendsReducerStateType => {\n    switch (action.type) {\n        case \"ARR-PEOPLE\":\n            return state\n        case \"FOLLOW\":\n            return {\n                ...state,\n                friends: state.friends.map((human) => {\n                    return human.id === action.humanId ? {...human, followed: true} : human\n                })\n            }\n        case \"UNFOLLOW\":\n            return {\n                ...state,\n                friends: state.friends.map((human) => {\n                    return human.id === action.humanId ? {...human, followed: false} : human\n                })\n            }\n\n        case \"SET_USERS\":\n            return {\n                ...state,\n                friends: [...action.users]\n            }\n        case \"SET_CURRENT_PAGE\": {\n            return {\n                ...state,\n                currentPage: action.currentPage\n            }\n        }\n        case \"SET_TOTAL_USERS_COUNT\": {\n            return {\n                ...state,\n                totalUsersCount: action.usersCount\n            }\n        }\n        case \"TOGGLE_ISFETCHING\": {\n            return {\n                ...state,\n                isFetching: action.isFetching\n            }\n        }\n        case \"FOLLOWING\": {\n            console.log(state.followingInProgress)\n            return {\n                ...state,\n                followingInProgress: action.following ?\n                    [...state.followingInProgress, action.id] :\n                    state.followingInProgress.filter(id => id !== action.id)\n            }\n        }\n        default: {\n            return state\n        }\n    }\n}\n\nexport type friendsReducerActionCreatorType = ReturnType<typeof friendsReducerActionCreator>\nexport const friendsReducerActionCreator = () => {\n    return {\n        type: \"ARR-PEOPLE\"\n    } as const\n}\n\nexport type followACType = ReturnType<typeof follow>\nexport const follow = (humanId: number) => {\n    return {\n        type: \"FOLLOW\",\n        humanId: humanId\n    } as const\n}\n\nexport type unFollowACType = ReturnType<typeof unFollow>\nexport const unFollow = (humanId: number) => {\n    return {\n        type: \"UNFOLLOW\",\n        humanId: humanId\n    } as const\n}\n\nexport type setUsersACType = ReturnType<typeof setUsers>\nexport const setUsers = (users: Array<PeopleType>) => {\n    return {\n        type: \"SET_USERS\",\n        users: users\n    } as const\n}\n\nexport type setCurrentPageType = ReturnType<typeof setCurrentPage>\nexport const setCurrentPage = (currentPage: number) => {\n    return {\n        type: \"SET_CURRENT_PAGE\",\n        currentPage\n    } as const\n}\n\nexport type setTotalUsersCountType = ReturnType<typeof setTotalUsersCount>\nexport const setTotalUsersCount = (usersCount: number) => {\n    return {\n        type: \"SET_TOTAL_USERS_COUNT\",\n        usersCount\n    } as const\n}\n\nexport type toggleIsFetchingType = ReturnType<typeof toggleIsFetching>\nexport const toggleIsFetching = (isFetching: boolean) => {\n    return {\n        type: \"TOGGLE_ISFETCHING\",\n        isFetching\n    } as const\n}\n\nexport type followingInProgressACType = ReturnType<typeof followingInProgressAC>\nexport const followingInProgressAC = (following: boolean, id: number) => {\n    return {\n        type: \"FOLLOWING\",\n        following,\n        id\n    } as const\n}\n\nexport const getFriendsThunkCreator = (currentPage: number, pageSize: number) => {\n    return (dispatch: Dispatch) => {\n        dispatch(toggleIsFetching(true))\n        usersApi.getUsers(currentPage, pageSize)\n            .then((response) => {\n                dispatch(toggleIsFetching(false))\n                dispatch(setUsers(response.items))\n            })\n    }\n}\n\nexport const setPageThunkCreator = (el: number, pageSize: number) => {\n    return (dispatch: Dispatch) => {\n        dispatch(setCurrentPage(el))\n        dispatch(toggleIsFetching(true))\n        usersApi.getUsers(el, pageSize)\n            .then((response) => {\n                dispatch(setUsers(response.items))\n                dispatch(toggleIsFetching(false))\n            })\n    }\n}\n\nexport const followThunk = (id: number) => {\n    return (dispatch: Dispatch) => {\n        dispatch(followingInProgressAC(true, id))\n        usersApi.followUser(id).then((response) => {\n            if (response.resultCode === 0) {\n                dispatch(follow(id))\n            }\n            dispatch(followingInProgressAC(false, id))\n        })\n\n    }\n}\nexport const unfollowThunk = (id: number) => {\n    return (dispatch: Dispatch) => {\n        dispatch(followingInProgressAC(true, id))\n        usersApi.unfollowUser(id).then((response) => {\n            if (response.resultCode === 0) {\n                dispatch(unFollow(id))\n            }\n            dispatch(followingInProgressAC(false, id))\n        })\n    }\n}\n\nexport const setTotalUserCountThunk = () => {\n    return (dispatch: Dispatch) => {\n        usersApi.getUserTotalCount()\n            .then(res => {\n                dispatch(setTotalUsersCount(res))\n            })\n    }\n}","export default __webpack_public_path__ + \"static/media/user (1).7a4b608b.png\";","import classes from \"./Friends.module.css\";\nimport user from \"../../img/user (1).png\";\nimport React, {useState} from \"react\";\nimport {NavLink} from \"react-router-dom\";\nimport {usersApi} from \"../../api/api\";\n\ntype FriendsPropsType = {\n    currentPage: number\n    friends: any[]\n    unfollowThunk: (id: number) => void\n    followThunk: (id: number) => void\n    getUsers: () => void\n    pages: Array<number>\n    setPage: (el: number) => void\n    followingInProgress: number[]\n    totalUsersCount: number\n    pageSize: number\n}\n\nexport const Friends = (props: FriendsPropsType) => {\n\n    let pageCount = Math.ceil(props.totalUsersCount / props.pageSize)\n    let [portionNumber, setPortionNumber] = useState(1)\n    let portionCount = Math.ceil(pageCount / 10) // 10 - count of element\n    let leftBorder = (portionNumber - 1) * 10 + 1\n    let rightBorder = portionNumber * 10\n\n\n    return <div className={classes.mainDiv}>\n        <button onClick={props.getUsers}>Get users</button>\n        <h3>People</h3>\n        {\n            portionNumber > 1 && <button onClick={() => setPortionNumber(portionNumber - 1)}>Back</button>\n        }\n        {\n            props.pages\n                .filter((el) => {\n                    return el >= leftBorder && el <= rightBorder\n                }).map((el) => {\n                return <span onClick={() => {\n                    props.setPage(el)\n                }} className={props.currentPage === el ? classes.currentEl : \"\"}>{el}</span>\n            })}\n        {portionCount > portionNumber && <button onClick={() => setPortionNumber(portionNumber + 1)}>Next</button>}\n        {\n            props.friends.map((elem) => {\n                return (\n                    <div key={elem.id} className={classes.mainFriendsDiv}>\n                        <div className={classes.divFriends}>\n                            <div className={classes.photoAndName}>\n                                <NavLink to={'/profile/' + elem.id}>\n                                    <img className={classes.imgFriends}\n                                         src={elem.photos.small !== null ? elem.img : user}/>\n                                </NavLink>\n                                <h4 className={classes.nameOfPeoples}>{elem.name}</h4>\n                            </div>\n                            <div className={classes.addressInfo}>\n                                <p className={classes.country}>{\"Belarus\"}</p>\n                                <p className={classes.city}>{\"Brest\"}</p>\n                            </div>\n                        </div>\n                        {\n                            elem.followed ?\n                                <div>\n                                    <button disabled={props.followingInProgress.some(id => id === elem.id)}\n                                            onClick={() => {\n                                                props.unfollowThunk(elem.id)\n                                            }} className={classes.unFollowStyle}>UNFOLLOW\n                                    </button>\n                                </div>\n                                :\n                                <div>\n                                    <button disabled={props.followingInProgress.some(id => id === elem.id)}\n                                            onClick={() => {\n                                                props.followThunk(elem.id)\n                                            }} className={classes.followStyle}>FOLLOW\n                                    </button>\n                                </div>\n                        }\n                    </div>\n                )\n            })\n        }\n    </div>\n\n}","export default __webpack_public_path__ + \"static/media/Double Ring-1s-200px.1ef49492.svg\";","import classes from \"../Friends/Friends.module.css\";\nimport preloader from \"../../img/Double Ring-1s-200px.svg\";\nimport React from \"react\";\n\nexport const Preloader = () => {\n    return (\n        <div className={classes.loader} >\n            <img src={preloader}/>\n        </div>\n    )\n\n}","import {AppStateType} from \"./redux-store\";\n\nexport const getRequestUsers = (state: AppStateType) => {\n    return state.friendsReducer.friends\n}\nexport const getPageSize = (state: AppStateType) => {\n    return state.friendsReducer.pageSize\n}\nexport const getTotalUsersCount = (state: AppStateType) => {\n    return state.friendsReducer.totalUsersCount\n}\nexport const get–°urrentPage = (state: AppStateType) => {\n    return  state.friendsReducer.currentPage\n}\nexport const isFetching = (state: AppStateType) => {\n    return   state.friendsReducer.isFetching\n}\nexport const followingInProgress = (state: AppStateType) => {\n    return   state.friendsReducer.followingInProgress\n}\n","import {connect, useDispatch} from \"react-redux\";\nimport {AppStateType} from \"../../redux/redux-store\";\nimport {\n    followingInProgressAC, followThunk, getFriendsThunkCreator,\n    setCurrentPage, setPageThunkCreator, setTotalUserCountThunk,\n    setTotalUsersCount,\n    unFollow, unfollowThunk,\n} from \"../../redux/friendsReducer\";\nimport React, {useEffect, useState} from \"react\";\nimport {Friends} from \"./Friends\";\nimport {Preloader} from \"../Preloader/Preloader\";\nimport {\n    followingInProgress,\n    getPageSize,\n    getTotalUsersCount,\n    getRequestUsers,\n    get–°urrentPage,\n    isFetching\n} from \"../../redux/users-selectors\";\n\n\nexport const FriendsContainerComponent = (props: FriendsAPIComponentType) => {\n\n    let dispatch = useDispatch()\n    useEffect(() => {\n        dispatch(setTotalUserCountThunk())\n    }, [])\n    const getUsers = () => {\n        props.getUsers(props.currentPage, props.pageSize)\n    }\n\n    let pageCount = Math.ceil(props.totalUsersCount / props.pageSize)\n    let pages: Array<number> = []\n    for (let i = 1; i <= pageCount; i++) {\n        pages.push(i)\n    }\n\n    let setPage = (el: number) => {\n        props.setPageThunkCreator(el, props.pageSize)\n    }\n\n    return (\n        <>\n            {props.isFetching ?\n                <Preloader/>\n                :\n                <Friends\n                    currentPage={props.currentPage}\n                    friends={props.friends}\n                    unfollowThunk={props.unfollowThunk}\n                    followThunk={props.followThunk}\n                    getUsers={getUsers}\n                    pages={pages}\n                    setPage={setPage}\n                    followingInProgress={props.followingInProgress}\n                    totalUsersCount={props.totalUsersCount}\n                    pageSize={props.pageSize}\n                />}\n\n        </>\n    )\n}\n\ntype mapStateToPropsType = {\n    friends: Array<any>\n    pageSize: number\n    totalUsersCount: number\n    currentPage: number\n    isFetching: boolean\n    followingInProgress: number[]\n}\ntype mapDispatchToPropsType = {\n    setCurrentPage: (page: number) => void\n    setTotalUsersCount: (usersCount: number) => void\n    followingInProgressAC: (following: boolean, id: number) => void\n    getUsers: (currentPage: number, pageSize: number) => void\n    setPageThunkCreator: (el: number, pageSize: number) => void\n    followThunk: (id: number) => void\n    unfollowThunk: (id: number) => void\n}\n\nlet mapStateToProps = (state: AppStateType): mapStateToPropsType => {\n    return {\n        friends: getRequestUsers(state),\n        pageSize: getPageSize(state),\n        totalUsersCount: getTotalUsersCount(state),\n        currentPage: get–°urrentPage(state),\n        isFetching: isFetching(state),\n        followingInProgress: followingInProgress(state)\n    }\n}\ntype FriendsAPIComponentType = mapStateToPropsType & mapDispatchToPropsType\n\nexport const FriendsContainer = connect(mapStateToProps,\n    {\n        unFollow,\n        setCurrentPage,\n        setTotalUsersCount,\n        followingInProgressAC,\n        getUsers: getFriendsThunkCreator,\n        setPageThunkCreator,\n        followThunk,\n        unfollowThunk,\n    }\n)(FriendsContainerComponent)","export default __webpack_public_path__ + \"static/media/photoFromProfile.6aaf0346.jpg\";","import React from 'react';\nimport classes from \"./Profile.module.css\";\nimport {ProfileType} from \"../../redux/profileReducer\";\nimport {Preloader} from \"../Preloader/Preloader\";\nimport user from \"../../img/user (1).png\";\nimport photoFromProfile from \"../../img/photoFromProfile.jpg\"\n\n\nexport type ProtoAndInfoType = {\n    profile: ProfileType\n    params: any\n}\nexport const ProtoAndInfo = (props: ProtoAndInfoType) => {\n\n    if (!Object.keys(props.profile).length) {\n        return <Preloader/>\n    }\n    let imgRender = () => {\n        return props.params ?\n            <img className={classes.photo} src={props.profile.photos.large ? props.profile.photos.large : user}/>\n            :\n            <img className={classes.photo}\n                 src={photoFromProfile}/>\n    }\n\n    return (\n        <div className={classes.photoAndInfo}>\n            {imgRender()}\n            <div className={classes.statistics}>\n                <img className={classes.logo} src=\"https://img.icons8.com/ios/50/000000/statistics.png\"/>\n                <p className={classes.text}>Statistics</p>\n            </div>\n            <div className={classes.statistics}>\n                <img className={classes.logo}\n                     src=\"https://img.icons8.com/ios/50/000000/no-reminders.png\"/>\n                <p className={classes.text}>Reminders</p>\n            </div>\n        </div>\n    )\n}","import classes from \"../../Profile/EditableSpan/EditableSpan.module.css\";\nimport React, {ChangeEvent, KeyboardEvent, useState} from \"react\";\n\n\ntype EditableSpanPropsType = {\n    status: string\n    updateStatus: (status: any) => void\n}\nexport const EditableSpan = (props: EditableSpanPropsType) => {\n    let [state, setState] = useState(true)\n    let [value, setValue] = useState(props.status)\n    let clickOnSpan = () => {\n        setState(false)\n    }\n    let onBlurInput = () => {\n        setState(true)\n        props.updateStatus(value)\n    }\n    let onChangeInput = (e: ChangeEvent<HTMLInputElement>) => {\n        setValue(e.currentTarget.value)\n    };\n\n    return (\n        <>\n            {state ?\n                <span className={classes.status} onDoubleClick={clickOnSpan}>{value}</span>\n                :\n                <input autoFocus\n                       onBlur={onBlurInput}\n                       className={classes.inputOnProfile}\n                       onChange={onChangeInput}\n                       value={value}\n                />}\n\n        </>\n    )\n}","import React from 'react';\nimport classes from \"./DescriptionProfile.module.css\";\nimport {ProfileType} from \"../../redux/profileReducer\";\nimport {EditableSpan} from \"./EditableSpan/EditableSpan\";\n\nexport type DescriptionProfileType = {\n    profile: ProfileType\n    params: any\n    status: string\n    updateStatus: (status: any) => void\n}\nexport const DescriptionProfile = (props: DescriptionProfileType) => {\n\n    let nameRender = () => {\n        return props.params ? props.profile.fullName : \"Vitalik Baiduk\"\n    }\n\n    return (\n        <div className={classes.content}>\n            <div className={classes.nameAndActive}>\n                <p className={classes.name}>\n                    {nameRender()}\n                </p>\n                <p className={classes.active}>\n                    Online\n                </p>\n            </div>\n            <EditableSpan status={props.status} updateStatus={props.updateStatus}/>\n            <div className={classes.descrOfHuman}>\n                <div className={classes.elemDescrOfHuman}>\n                    <p className={classes.textDescr}>Date of Birth:</p>\n                    <p className={classes.elemDescf}>05 May 2002</p>\n                </div>\n                <div className={classes.elemDescrOfHuman}>\n                    <p className={classes.textDescr}>City:</p>\n                    <p className={classes.elemDescf}>Brest</p>\n                </div>\n                <div className={classes.elemDescrOfHuman}>\n                    <p className={classes.textDescr}>Place of study:</p>\n                    <p className={classes.elemDescf}>Brest State University named after A.S. Pushkin</p>\n                </div>\n            </div>\n        </div>\n    )\n}\n","import {sendMessageActionCreatorType, updateNewMessageBodyActionCreatorType} from \"./dialogsReducer\";\nimport {friendsReducerActionCreatorType, toggleIsFetching} from \"./friendsReducer\";\nimport {profileApi, usersApi} from \"../api/api\";\nimport {Dispatch} from \"redux\";\n\ntype ActionType = addPostActionCreatorType\n    | changeInputValueActionCreatorType\n    | updateNewMessageBodyActionCreatorType\n    | sendMessageActionCreatorType\n    | friendsReducerActionCreatorType\n    | setUsersProfileType\n    | setStatusType\n\nexport type ArrPostsType = {\n    id: number\n    text: string;\n    likeCount: number\n}\n\nexport type ProfileType = {\n    aboutMe: string\n    contacts: {\n        facebook: string\n        website: null\n        vk: string\n        twitter: string\n        instagram: string\n        youtube: null\n        github: string\n        mainLink: null\n    }\n    lookingForAJob: boolean\n    lookingForAJobDescription: string\n    fullName: string\n    userId: number\n    photos: {\n        small: string\n        large: string\n    }\n}\nexport type initialStateType = {\n    profile: ProfileType,\n    posts: Array<ArrPostsType>,\n    newInputValue: string\n    status: string\n}\n\nlet initialState: initialStateType = {\n    profile: {} as ProfileType,\n    posts: [] as Array<ArrPostsType>,\n    newInputValue: \"\",\n    status: \"\",\n}\nexport const profileReducer = (state: initialStateType = initialState, action: ActionType): initialStateType => {\n    switch (action.type) {\n        case \"ADD-POST\" :\n            let newPost = {id: 2, text: state.newInputValue, likeCount: 2};\n            return {\n                ...state,\n                posts: [newPost, ...state.posts],\n                newInputValue: ''\n            }\n        case \"CHANGE-INPUT-VALUE\":\n            return {\n                ...state,\n                newInputValue: action.newValue\n            }\n        case \"SET_USERS_PROFILE\": {\n            return {\n                ...state,\n                profile: action.profile\n            }\n        }\n        case \"SET_STATUS\": {\n            return {\n                ...state,\n                status: action.status\n            }\n        }\n        default :\n            return state\n    }\n}\n\nexport  type addPostActionCreatorType = ReturnType<typeof addPostActionCreator>\nexport const addPostActionCreator = () => {\n    return {\n        type: \"ADD-POST\"\n    } as const\n}\n\nexport type changeInputValueActionCreatorType = ReturnType<typeof changeInputValueActionCreator>\nexport const changeInputValueActionCreator = (newValue: string) => {\n    return {\n        type: \"CHANGE-INPUT-VALUE\",\n        newValue: newValue\n    } as const\n}\nexport type setUsersProfileType = ReturnType<typeof setUsersProfile>\nexport const setUsersProfile = (profile: ProfileType) => {\n    return {\n        type: \"SET_USERS_PROFILE\",\n        profile\n    } as const\n}\n\nexport type setStatusType = ReturnType<typeof setStatus>\nexport const setStatus = (status: string) => {\n    return {\n        type: \"SET_STATUS\",\n        status\n    } as const\n}\n\n\nexport const setUserThunkCreator = (userId: number) => {\n    return (dispatch: Dispatch) => {\n        dispatch(toggleIsFetching(true))\n        usersApi.setUser(userId)\n            .then((response) => {\n                dispatch(toggleIsFetching(false))\n                dispatch(setUsersProfile(response.data))\n            })\n    }\n}\n\nexport const getStatus = (userId: any) => {\n    return (dispatch: Dispatch) => {\n        profileApi.getStatus(userId)\n            .then((response) =>{\n                dispatch(setStatus(response.data))\n            })\n    }\n}\nexport const updateStatus = (status: string) => {\n    return (dispatch: Dispatch) => {\n        profileApi.updateStatus(status)\n            .then((response) =>{\n                debugger\n                if (response.data.resultCode === 0){\n                    // debugger\n                    dispatch(setStatus(status))\n                }\n            })\n    }\n}\n\n","import {AnyAction, Dispatch} from \"redux\";\nimport {authApi} from \"../api/api\";\nimport {AxiosResponse} from \"axios\";\n\ntype ActionType = setUserDataType\n\nexport type initialStateType = {\n    userId: null\n    email: null\n    login: null\n    isAuth: boolean\n}\n\nlet initialState: initialStateType = {\n    userId: null,\n    email: null,\n    login: null,\n    isAuth: false\n}\nexport const authReducer = (state: initialStateType = initialState, action: ActionType): initialStateType => {\n    switch (action.type) {\n        case \"SET_USER_DATA\"  :\n            return {\n                ...state,\n                ...action.data,\n                isAuth: true\n            }\n        default :\n            return state\n    }\n}\n\ntype setUserDataType = ReturnType<typeof setUserData>\nexport const setUserData = (userId: any, email: any, login: any) => {\n    return {\n        type: \"SET_USER_DATA\",\n        data: {\n            userId: userId,\n            email: email,\n            login: login,\n        }\n    } as const\n}\n\nexport const getAuthUserData = () => async (dispatch: Dispatch) => {\n    try {\n        const res = await authApi.me()\n        if (res.data.resultCode === 0) {\n            let {id, email, login} = res.data.data\n            dispatch(setUserData(id, email, login))\n        }\n        return res\n    } catch (err) {\n\n    }\n}","import React from 'react';\nimport {Dispatch} from \"redux\";\nimport {getAuthUserData} from \"./authReducer\";\n\ntype initialStateType = {\n    initialized: boolean\n}\n\nlet initialState: initialStateType = {\n    initialized: false\n}\nexport const appReducer = (state: initialStateType = initialState, action: ActionType): initialStateType => {\n    switch (action.type) {\n        case \"SET_INITIALIZED\": {\n            return {\n                ...state,\n                initialized: true\n            }\n        }\n        default :\n            return state\n    }\n}\n\ntype setInitializedType = ReturnType<typeof setInitialized>\nlet setInitialized = () => {\n    return {\n        type: \"SET_INITIALIZED\"\n    } as const\n}\nexport const initialize = () => {\n    return (dispatch: Dispatch<any>) => {\n        let promise = dispatch(getAuthUserData())\n        //@ts-ignore\n        promise.then(() => {\n            dispatch(setInitialized())\n        })\n    }\n}\n\n\ntype  ActionType = setInitializedType\n","import {applyMiddleware, combineReducers, createStore} from \"redux\";\nimport {profileReducer} from \"./profileReducer\";\nimport {dialogsReducer} from \"./dialogsReducer\";\nimport {friendsReducer} from \"./friendsReducer\";\nimport {authReducer} from \"./authReducer\";\nimport thunkMiddleware from \"redux-thunk\"\nimport {formReducer} from \"./formReducer\";\nimport {appReducer} from \"./appReducer\";\n\nlet rootReducer = combineReducers({\n    profileReducer: profileReducer,\n    dialogsReducer: dialogsReducer,\n    friendsReducer: friendsReducer,\n    authReducer: authReducer,\n    form: formReducer,\n    appReducer:appReducer,\n})\n\nexport type AppStateType = ReturnType<typeof rootReducer>\nexport let store = createStore(rootReducer, applyMiddleware(thunkMiddleware));\n//@ts-ignore\nwindow.store = store","export const formReducer = (state: any = \"\", action: any) => {\n    return state\n}","import {\n    addPostActionCreator, ArrPostsType,\n    changeInputValueActionCreator,\n} from \"../../../redux/profileReducer\";\nimport React, {ChangeEvent} from \"react\";\nimport {Posts} from \"./Posts\";\nimport {Dispatch} from \"redux\";\nimport {connect} from \"react-redux\";\nimport {AppStateType, store} from \"../../../redux/redux-store\";\n\n\ntype mapStateToPropsType = {\n    newInputValue: string\n    posts: Array<ArrPostsType>,\n}\ntype mapDispatchToPropsType = {\n    addPosts: () => void\n    onChange: (text: ChangeEvent<HTMLInputElement>) => void\n}\nexport type PropsType = mapStateToPropsType & mapDispatchToPropsType\n\nlet mapStateToProps = (state: AppStateType): mapStateToPropsType => {\n    return {\n        newInputValue: state.profileReducer.newInputValue,\n        posts: state.profileReducer.posts\n    }\n}\nlet mapDispatchToProps = (dispatch: Dispatch): mapDispatchToPropsType => {\n    return {\n        addPosts: () => {\n            let state = store.getState()\n            if (state.profileReducer.newInputValue) {\n                dispatch(addPostActionCreator())\n            }\n        },\n        onChange: (text: ChangeEvent<HTMLInputElement>) => {\n            dispatch(changeInputValueActionCreator(text.currentTarget.value))\n        }\n    }\n}\n\nexport const PostContainer = connect(mapStateToProps, mapDispatchToProps)(Posts)","import React, {ChangeEvent} from 'react';\nimport classes from \"./Post.module.css\";\nimport {PropsType} from \"./PostContainer\";\n\n\nexport const Posts = (props: PropsType) => {\n\n    const onAddPosts = () => {\n        props.addPosts()\n    }\n    const onPostChange = (e: ChangeEvent<HTMLInputElement>) => {\n        props.onChange(e)\n    }\n    return (\n\n        <div className={classes.post}>\n            <div className={classes.mainInput}>\n                <input placeholder='Enter your post'\n                       className={classes.inputProfile}\n                       value={props.newInputValue}\n                       onChange={onPostChange}/>\n                <button onClick={onAddPosts} className={classes.buttonProfile}>Add post\n                </button>\n            </div>\n            {props.posts.map((p) => {\n                return <div key={p.id}><p className={classes.textPost}>{p.text}</p></div>\n            })}\n\n        </div>\n    )\n}\n","import React from 'react';\nimport classes from \"./Profile.module.css\";\nimport {ProtoAndInfo} from \"./PhotoAndInfo\";\nimport {DescriptionProfile} from \"./DescriptionProfile\";\nimport {PostContainer} from \"./Post/PostContainer\";\nimport {ProfileType} from \"../../redux/profileReducer\";\n\n\nexport type ProfilePropsType = {\n    profile: ProfileType\n    setUsersProfile: (profile: any) => void\n    toggleIsFetching: (isFetching: boolean) => void\n    params: any\n    status: string\n    updateStatus: (status: any) => void\n}\nexport const Profile = (props: ProfilePropsType) => {\n    return (\n        <div className={classes.mainContent}>\n            <div className={classes.content}>\n                <ProtoAndInfo profile={props.profile}\n                              params={props.params}/>\n                <DescriptionProfile profile={props.profile}\n                                    params={props.params}\n                                    status={props.status}\n                                    updateStatus={props.updateStatus}\n                />\n            </div>\n            <PostContainer/>\n        </div>\n    );\n}","import React from 'react';\nimport {Redirect} from \"react-router-dom\";\nimport {connect} from \"react-redux\";\nimport {AppStateType} from \"../redux/redux-store\";\n\n\ntype mapStateToPropsType = {\n    isAuth: boolean\n}\nlet mapStateToProps = (state: AppStateType): mapStateToPropsType => {\n    return {\n        isAuth: state.authReducer.isAuth\n    }\n}\n\nexport const withAuthRedirect = (Component: any) => {\n    const RedirectComponent = (props: mapStateToPropsType) => {\n        if (!props.isAuth) return <Redirect to=\"/login\"/>\n        return (\n            <Component {...props}/>\n        )\n\n    }\n    return connect(mapStateToProps)(RedirectComponent)\n}\n","import React from \"react\";\nimport {Profile} from \"./Profile\";\nimport {connect} from \"react-redux\";\nimport {getStatus, ProfileType, setUsersProfile, setUserThunkCreator, updateStatus} from \"../../redux/profileReducer\";\nimport {toggleIsFetching} from \"../../redux/friendsReducer\";\nimport {AppStateType} from \"../../redux/redux-store\";\nimport {withRouter} from \"react-router-dom\";\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\nimport {compose} from \"redux\";\n\n\nclass ProfileContainerComponent extends React.Component<any, any> {\n    componentDidMount() {\n        let userId = this.props.match.params.userId\n        if (!userId) {\n            userId = 20485\n        }\n        this.props.setUserThunkCreator(userId)\n        this.props.getStatus(userId)\n    }\n\n    render() {\n        return <Profile profile={this.props.profile}\n                        setUsersProfile={this.props.setUsersProfile}\n                        toggleIsFetching={this.props.toggleIsFetching}\n                        params={this.props.match.params.userId}\n                        status={this.props.status}\n                        updateStatus={this.props.updateStatus}\n        />\n    }\n}\n\nexport type ProfileContainerType = mapStateToPropsType & mapDispatchToPropsType\n\nexport type mapStateToPropsType = {\n    profile: ProfileType\n    status:string\n}\n\nexport type mapDispatchToPropsType = {\n    setUsersProfile: (profile: any) => void\n    toggleIsFetching: (isFetching: boolean) => void\n    setUserThunkCreator: (userId: number) => void\n    isAuth: boolean\n}\n\nlet mapStateToProps = (state: AppStateType) => {\n    return {\n        profile: state.profileReducer.profile,\n        status:state.profileReducer.status\n    }\n}\n\nexport const ProfileContainer = compose<React.ComponentType>(\n    connect(mapStateToProps, {\n        setUsersProfile,\n        toggleIsFetching,\n        setUserThunkCreator,\n        getStatus,\n        updateStatus,\n    }),\n    withRouter,\n    withAuthRedirect\n)\n(ProfileContainerComponent);\n","export default __webpack_public_path__ + \"static/media/logoVk.9cea094c.png\";","import React from 'react';\nimport classes from \"./Header.module.css\";\nimport logo from \"../../img/logoVk.png\"\nimport {NavLink} from \"react-router-dom\";\n\n\ntype HeaderPropsType = {\n    login: any,\n    isAuth: boolean\n}\nexport const Header = (props: HeaderPropsType) => {\n    return (\n        <header className={classes.mainHeader}>\n            <img className={classes.logo}\n                 src={logo}/>\n            <div className={classes.loginBlock}>\n                {\n                    props.isAuth ?\n                        <NavLink to=\"/profile\">\n                            <p className={classes.loginName}>{props.login}</p>\n                        </NavLink>\n                        :\n                        <NavLink activeClassName={classes.activeLogin}\n                                 className={classes.loginButton} to=\"/login\">Login\n                        </NavLink>\n                }\n            </div>\n        </header>\n    )\n}","import React from 'react';\nimport {Header} from \"./Header\";\nimport {connect} from \"react-redux\";\nimport {getAuthUserData, setUserData} from \"../../redux/authReducer\";\nimport {AppStateType} from \"../../redux/redux-store\";\n\nexport class HeaderContainerComponent extends React.Component<any, any> {\n\n    render() {\n        return (\n            <Header login={this.props.login} isAuth={this.props.isAuth}/>\n        )\n    }\n}\n\nconst mapStateToProps = (state: AppStateType) => {\n    return {\n        isAuth: state.authReducer.isAuth,\n        login: state.authReducer.login\n    }\n}\n\nexport const HeaderContainer = connect(mapStateToProps, {setUserData})(HeaderContainerComponent)","import React from 'react';\nimport classes from \"../Login/Login.module.css\"\n\n\ntype FormDataType = {\n    login: string\n    password: string\n    rememberMe: boolean\n}\n\nexport const LoginComponent = () => {\n    debugger\n    return (\n        <div className={classes.form}>\n            <form className={classes.formInner}>\n                <div>\n                    <input className={classes.input} placeholder=\"email\"/>\n                </div>\n                <div>\n                    <input className={classes.input} placeholder=\"password\" />\n                </div>\n                <div>\n                    <button className={classes.send}>Send</button>\n                </div>\n            </form>\n        </div>\n    )\n}\n\nexport const Login = () => {\n    return (\n        <>\n            <LoginComponent/>\n        </>\n    )\n}\n","import React, {Component} from 'react';\nimport './App.css';\nimport {Nav} from \"./components/Nav/Nav\";\nimport {Route, withRouter} from \"react-router-dom\";\nimport {News} from \"./components/News/News\";\nimport {Community} from \"./components/Community/Community\";\nimport {Photo} from \"./components/Photo/Photo\";\nimport {Music} from \"./components/Music/Music\";\nimport {Games} from \"./components/Games/Games\";\nimport {Settings} from \"./components/Settings/Settings\";\nimport {DialogsContainer} from \"./components/Dialogs/DialogsContainer\";\nimport {FriendsContainer} from \"./components/Friends/FriendsContainer\";\nimport {ProfileContainer} from \"./components/Profile/ProfileContainerComponent\";\nimport {HeaderContainer} from \"./components/Header/HeaderContainer\";\nimport {Login} from \"./components/Login/Login\";\nimport {connect} from \"react-redux\";\nimport {compose} from \"redux\";\nimport {AppStateType} from \"./redux/redux-store\";\nimport {initialize} from \"./redux/appReducer\";\nimport {Preloader} from \"./components/Preloader/Preloader\";\n\nclass App extends Component<any, any> {\n    componentDidMount() {\n        this.props.initialize()\n    }\n    render() {\n        if (!this.props.initialized) {\n            return <Preloader/>\n        } else {\n            return (\n                <div className={\"mainPage\"}>\n                    <HeaderContainer/>\n                    <div className={\"mainContent\"}>\n                        <Nav/>\n                        <Route path=\"/profile/:userId?\" render={() =>\n                            <ProfileContainer/>}/>\n                        <Route path=\"/news\" component={News}/>\n                        <Route path=\"/dialogs\" render={() =>\n                            <DialogsContainer/>}/>\n                        <Route path=\"/friends\" render={() =>\n                            <FriendsContainer/>}/>\n                        <Route path=\"/community\" component={Community}/>\n                        <Route path=\"/photo\" component={Photo}/>\n                        <Route path=\"/music\" component={Music}/>\n                        <Route path=\"/games\" component={Games}/>\n                        <Route path=\"/settings\" component={Settings}/>\n                        <Route path=\"/login\" component={Login}/>\n                    </div>\n                </div>\n            );\n        }\n    }\n\n}\n\nconst mapStateToProps = (state: AppStateType) => {\n    return {\n        initialized: state.appReducer.initialized\n    }\n}\nexport default compose<React.ComponentType>(\n    withRouter,\n    connect(mapStateToProps,\n        {initialize}))\n(App)","import React from 'react';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport {store} from \"./redux/redux-store\";\nimport {BrowserRouter} from \"react-router-dom\";\nimport {Provider} from \"react-redux\";\n\n\nReactDOM.render(\n    <BrowserRouter>\n        <React.StrictMode>\n            <Provider store={store}>\n                <App/>\n            </Provider>\n        </React.StrictMode>\n    </BrowserRouter>,\n    document.getElementById('root')\n);\n\n\n//subscribe(renderEntireThree)\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}